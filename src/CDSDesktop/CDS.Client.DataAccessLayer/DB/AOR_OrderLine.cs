//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDS.Client.DataAccessLayer.DB
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    
    public partial class AOR_OrderLine : INotifyPropertyChanged, IBaseEntity
    { 
    	bool hasChanges = false;
        public bool HasChanges
        {
        	get
        	{
                return hasChanges;
        	}
        	set
        	{
                if (hasChanges != value)
                    hasChanges = value;
        	}
        } 
    	
    	bool ignoreChanges = false;
        public bool IgnoreChanges
        {
            get
            {
                
                
                return ignoreChanges;
            }
            set
            {
                if (ignoreChanges != value)
                {
                    ignoreChanges = value;
                }
            }
        }
    
    	List<string> changeList = new List<string>();
    	[Browsable(false), EditorBrowsable(EditorBrowsableState.Never)]
        public List<string> ChangeList
        {
            get
            { 
                return changeList;
            }
            set
            {
                if (changeList != value)
                {
                    changeList = value;
                }
            }
        } 
    
    	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged; 
    	private void SetProperty<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberName] string name = "")
    	{
    		if (!EqualityComparer<T>.Default.Equals(field, value))
    		{
    			field = value;
    			//ChangeSet.Add(LogEntry.New<T>(field.ToString(),this.ToString(), this.Id,  field,  value ));
    			var handler = PropertyChanged;
    			if (handler != null)
    			{
    				if(!name.StartsWith("Id") && name != "Title" && name != "CreatedOn" && !IgnoreChanges)  
    				{
    					HasChanges = true;
    					ChangeList.Add(name);
    				}
    
    				handler(this, new System.ComponentModel.PropertyChangedEventArgs(name));
    			}
    		}
    	} 
     
        private long id;
        private long orderId;
        private long supplierId;
        private long inventoryId;
        private string site;
        private string supplier;
        private string shortName;
        private string name;
        private Nullable<decimal> safetyStock;
        private decimal onHand;
        private decimal onHold;
        private decimal onReserve;
        private decimal onOrder;
        private Nullable<decimal> unitCost;
        private Nullable<decimal> unitAverage;
        private Nullable<decimal> unitPrice;
        private Nullable<decimal> avgDemand;
        private Nullable<decimal> eoq;
        private Nullable<decimal> orderPoint;
        private Nullable<decimal> orderAmountCalculated;
        private Nullable<decimal> orderAmount;
        private Nullable<decimal> total;
        private Nullable<decimal> totalTax;
        private long createdBy;
        private Nullable<System.DateTime> createdOn;
    
        public long Id 
    	{ 
    		get { return id; }
    		set { SetProperty(ref id, value); }
    	 }
        public long OrderId 
    	{ 
    		get { return orderId; }
    		set { SetProperty(ref orderId, value); }
    	 }
        public long SupplierId 
    	{ 
    		get { return supplierId; }
    		set { SetProperty(ref supplierId, value); }
    	 }
        public long InventoryId 
    	{ 
    		get { return inventoryId; }
    		set { SetProperty(ref inventoryId, value); }
    	 }
        public string Site 
    	{ 
    		get { return site; }
    		set { SetProperty(ref site, value); }
    	 }
        public string Supplier 
    	{ 
    		get { return supplier; }
    		set { SetProperty(ref supplier, value); }
    	 }
        public string ShortName 
    	{ 
    		get { return shortName; }
    		set { SetProperty(ref shortName, value); }
    	 }
        public string Name 
    	{ 
    		get { return name; }
    		set { SetProperty(ref name, value); }
    	 }
        public Nullable<decimal> SafetyStock 
    	{ 
    		get { return safetyStock; }
    		set { SetProperty(ref safetyStock, value); }
    	 }
        public decimal OnHand 
    	{ 
    		get { return onHand; }
    		set { SetProperty(ref onHand, value); }
    	 }
        public decimal OnHold 
    	{ 
    		get { return onHold; }
    		set { SetProperty(ref onHold, value); }
    	 }
        public decimal OnReserve 
    	{ 
    		get { return onReserve; }
    		set { SetProperty(ref onReserve, value); }
    	 }
        public decimal OnOrder 
    	{ 
    		get { return onOrder; }
    		set { SetProperty(ref onOrder, value); }
    	 }
        public Nullable<decimal> UnitCost 
    	{ 
    		get { return unitCost; }
    		set { SetProperty(ref unitCost, value); }
    	 }
        public Nullable<decimal> UnitAverage 
    	{ 
    		get { return unitAverage; }
    		set { SetProperty(ref unitAverage, value); }
    	 }
        public Nullable<decimal> UnitPrice 
    	{ 
    		get { return unitPrice; }
    		set { SetProperty(ref unitPrice, value); }
    	 }
        public Nullable<decimal> AvgDemand 
    	{ 
    		get { return avgDemand; }
    		set { SetProperty(ref avgDemand, value); }
    	 }
        public Nullable<decimal> Eoq 
    	{ 
    		get { return eoq; }
    		set { SetProperty(ref eoq, value); }
    	 }
        public Nullable<decimal> OrderPoint 
    	{ 
    		get { return orderPoint; }
    		set { SetProperty(ref orderPoint, value); }
    	 }
        public Nullable<decimal> OrderAmountCalculated 
    	{ 
    		get { return orderAmountCalculated; }
    		set { SetProperty(ref orderAmountCalculated, value); }
    	 }
        public Nullable<decimal> OrderAmount 
    	{ 
    		get { return orderAmount; }
    		set { SetProperty(ref orderAmount, value); }
    	 }
        public Nullable<decimal> Total 
    	{ 
    		get { return total; }
    		set { SetProperty(ref total, value); }
    	 }
        public Nullable<decimal> TotalTax 
    	{ 
    		get { return totalTax; }
    		set { SetProperty(ref totalTax, value); }
    	 }
        public long CreatedBy 
    	{ 
    		get { return createdBy; }
    		set { SetProperty(ref createdBy, value); }
    	 }
        public Nullable<System.DateTime> CreatedOn 
    	{ 
    		get { return createdOn; }
    		set { SetProperty(ref createdOn, value); }
    	 }
    
        
    	public virtual AOR_Order AOR_Order { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDS.Client.DataAccessLayer.DB
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    
    public partial class CAL_Calendar : INotifyPropertyChanged, IBaseEntity
    { 
    	bool hasChanges = false;
        public bool HasChanges
        {
        	get
        	{
                return hasChanges;
        	}
        	set
        	{
                if (hasChanges != value)
                    hasChanges = value;
        	}
        } 
    	
    	bool ignoreChanges = false;
        public bool IgnoreChanges
        {
            get
            {
                
                
                return ignoreChanges;
            }
            set
            {
                if (ignoreChanges != value)
                {
                    ignoreChanges = value;
                }
            }
        }
    
    	List<string> changeList = new List<string>();
    	[Browsable(false), EditorBrowsable(EditorBrowsableState.Never)]
        public List<string> ChangeList
        {
            get
            { 
                return changeList;
            }
            set
            {
                if (changeList != value)
                {
                    changeList = value;
                }
            }
        } 
    
    	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged; 
    	private void SetProperty<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberName] string name = "")
    	{
    		if (!EqualityComparer<T>.Default.Equals(field, value))
    		{
    			field = value;
    			//ChangeSet.Add(LogEntry.New<T>(field.ToString(),this.ToString(), this.Id,  field,  value ));
    			var handler = PropertyChanged;
    			if (handler != null)
    			{
    				if(!name.StartsWith("Id") && name != "Title" && name != "CreatedOn" && !IgnoreChanges)  
    				{
    					HasChanges = true;
    					ChangeList.Add(name);
    				}
    
    				handler(this, new System.ComponentModel.PropertyChangedEventArgs(name));
    			}
    		}
    	} 
     
        public CAL_Calendar()
        {
            this.CAL_Attachment = new List<CAL_Attachment>();
        }
    
        private long id;
        private short labelId;
        private string subject;
        private string description;
        private Nullable<System.DateTime> startDate;
        private Nullable<System.DateTime> endDate;
        private Nullable<bool> allDay;
        private string location;
        private Nullable<decimal> percentComplete;
        private string recurrenceInfo;
        private string reminderInfo;
        private Nullable<long> resourceId;
        private Nullable<short> statusId;
        private Nullable<short> typeId;
        private Nullable<long> documentId;
        private Nullable<System.DateTime> createdOn;
        private Nullable<long> createdBy;
        private string vehicle;
        private string registration;
        private string mileage;
        private string contact;
        private string telephone;
        private Nullable<long> entityId;
    
        public long Id 
    	{ 
    		get { return id; }
    		set { SetProperty(ref id, value); }
    	 }
        public short LabelId 
    	{ 
    		get { return labelId; }
    		set { SetProperty(ref labelId, value); }
    	 }
        public string Subject 
    	{ 
    		get { return subject; }
    		set { SetProperty(ref subject, value); }
    	 }
        public string Description 
    	{ 
    		get { return description; }
    		set { SetProperty(ref description, value); }
    	 }
        public Nullable<System.DateTime> StartDate 
    	{ 
    		get { return startDate; }
    		set { SetProperty(ref startDate, value); }
    	 }
        public Nullable<System.DateTime> EndDate 
    	{ 
    		get { return endDate; }
    		set { SetProperty(ref endDate, value); }
    	 }
        public Nullable<bool> AllDay 
    	{ 
    		get { return allDay; }
    		set { SetProperty(ref allDay, value); }
    	 }
        public string Location 
    	{ 
    		get { return location; }
    		set { SetProperty(ref location, value); }
    	 }
        public Nullable<decimal> PercentComplete 
    	{ 
    		get { return percentComplete; }
    		set { SetProperty(ref percentComplete, value); }
    	 }
        public string RecurrenceInfo 
    	{ 
    		get { return recurrenceInfo; }
    		set { SetProperty(ref recurrenceInfo, value); }
    	 }
        public string ReminderInfo 
    	{ 
    		get { return reminderInfo; }
    		set { SetProperty(ref reminderInfo, value); }
    	 }
        public Nullable<long> ResourceId 
    	{ 
    		get { return resourceId; }
    		set { SetProperty(ref resourceId, value); }
    	 }
        public Nullable<short> StatusId 
    	{ 
    		get { return statusId; }
    		set { SetProperty(ref statusId, value); }
    	 }
        public Nullable<short> TypeId 
    	{ 
    		get { return typeId; }
    		set { SetProperty(ref typeId, value); }
    	 }
        public Nullable<long> DocumentId 
    	{ 
    		get { return documentId; }
    		set { SetProperty(ref documentId, value); }
    	 }
        public Nullable<System.DateTime> CreatedOn 
    	{ 
    		get { return createdOn; }
    		set { SetProperty(ref createdOn, value); }
    	 }
        public Nullable<long> CreatedBy 
    	{ 
    		get { return createdBy; }
    		set { SetProperty(ref createdBy, value); }
    	 }
        public string Vehicle 
    	{ 
    		get { return vehicle; }
    		set { SetProperty(ref vehicle, value); }
    	 }
        public string Registration 
    	{ 
    		get { return registration; }
    		set { SetProperty(ref registration, value); }
    	 }
        public string Mileage 
    	{ 
    		get { return mileage; }
    		set { SetProperty(ref mileage, value); }
    	 }
        public string Contact 
    	{ 
    		get { return contact; }
    		set { SetProperty(ref contact, value); }
    	 }
        public string Telephone 
    	{ 
    		get { return telephone; }
    		set { SetProperty(ref telephone, value); }
    	 }
        public Nullable<long> EntityId 
    	{ 
    		get { return entityId; }
    		set { SetProperty(ref entityId, value); }
    	 }
    
        [System.Xml.Serialization.XmlIgnore]
    	public virtual ICollection<CAL_Attachment> CAL_Attachment { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDS.Client.DataAccessLayer.DB
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    
    public partial class HRS_Employee : INotifyPropertyChanged, IBaseEntity
    { 
    	bool hasChanges = false;
        public bool HasChanges
        {
        	get
        	{
                return hasChanges;
        	}
        	set
        	{
                if (hasChanges != value)
                    hasChanges = value;
        	}
        } 
    	
    	bool ignoreChanges = false;
        public bool IgnoreChanges
        {
            get
            {
                
                
                return ignoreChanges;
            }
            set
            {
                if (ignoreChanges != value)
                {
                    ignoreChanges = value;
                }
            }
        }
    
    	List<string> changeList = new List<string>();
    	[Browsable(false), EditorBrowsable(EditorBrowsableState.Never)]
        public List<string> ChangeList
        {
            get
            { 
                return changeList;
            }
            set
            {
                if (changeList != value)
                {
                    changeList = value;
                }
            }
        } 
    
    	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged; 
    	private void SetProperty<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberName] string name = "")
    	{
    		if (!EqualityComparer<T>.Default.Equals(field, value))
    		{
    			field = value;
    			//ChangeSet.Add(LogEntry.New<T>(field.ToString(),this.ToString(), this.Id,  field,  value ));
    			var handler = PropertyChanged;
    			if (handler != null)
    			{
    				if(!name.StartsWith("Id") && name != "Title" && name != "CreatedOn" && !IgnoreChanges)  
    				{
    					HasChanges = true;
    					ChangeList.Add(name);
    				}
    
    				handler(this, new System.ComponentModel.PropertyChangedEventArgs(name));
    			}
    		}
    	} 
     
        private long id;
        private string code;
        private string salutation;
        private string nickname;
        private byte[] photo;
        private string idNumber;
        private string passportNumber;
        private Nullable<System.DateTime> dateOfBirth;
        private Nullable<bool> gender;
        private Nullable<bool> maritalStatus;
        private Nullable<short> noOfDependents;
        private string revenueOffice;
        private string taxNumber;
        private string jobDescription;
        private string workNumber;
        private string homeNumber;
        private string mobileNumber;
        private string email;
        private string physicalAddress;
        private string postalAddress;
        private string contactName;
        private string contactTelephone;
        private long roleId;
        private Nullable<long> personId;
        private Nullable<System.DateTime> createdOn;
        private Nullable<long> createdBy;
    
        public long Id 
    	{ 
    		get { return id; }
    		set { SetProperty(ref id, value); }
    	 }
        public string Code 
    	{ 
    		get { return code; }
    		set { SetProperty(ref code, value); }
    	 }
        public string Salutation 
    	{ 
    		get { return salutation; }
    		set { SetProperty(ref salutation, value); }
    	 }
        public string Nickname 
    	{ 
    		get { return nickname; }
    		set { SetProperty(ref nickname, value); }
    	 }
        public byte[] Photo 
    	{ 
    		get { return photo; }
    		set { SetProperty(ref photo, value); }
    	 }
        public string IdNumber 
    	{ 
    		get { return idNumber; }
    		set { SetProperty(ref idNumber, value); }
    	 }
        public string PassportNumber 
    	{ 
    		get { return passportNumber; }
    		set { SetProperty(ref passportNumber, value); }
    	 }
        public Nullable<System.DateTime> DateOfBirth 
    	{ 
    		get { return dateOfBirth; }
    		set { SetProperty(ref dateOfBirth, value); }
    	 }
        public Nullable<bool> Gender 
    	{ 
    		get { return gender; }
    		set { SetProperty(ref gender, value); }
    	 }
        public Nullable<bool> MaritalStatus 
    	{ 
    		get { return maritalStatus; }
    		set { SetProperty(ref maritalStatus, value); }
    	 }
        public Nullable<short> NoOfDependents 
    	{ 
    		get { return noOfDependents; }
    		set { SetProperty(ref noOfDependents, value); }
    	 }
        public string RevenueOffice 
    	{ 
    		get { return revenueOffice; }
    		set { SetProperty(ref revenueOffice, value); }
    	 }
        public string TaxNumber 
    	{ 
    		get { return taxNumber; }
    		set { SetProperty(ref taxNumber, value); }
    	 }
        public string JobDescription 
    	{ 
    		get { return jobDescription; }
    		set { SetProperty(ref jobDescription, value); }
    	 }
        public string WorkNumber 
    	{ 
    		get { return workNumber; }
    		set { SetProperty(ref workNumber, value); }
    	 }
        public string HomeNumber 
    	{ 
    		get { return homeNumber; }
    		set { SetProperty(ref homeNumber, value); }
    	 }
        public string MobileNumber 
    	{ 
    		get { return mobileNumber; }
    		set { SetProperty(ref mobileNumber, value); }
    	 }
        public string Email 
    	{ 
    		get { return email; }
    		set { SetProperty(ref email, value); }
    	 }
        public string PhysicalAddress 
    	{ 
    		get { return physicalAddress; }
    		set { SetProperty(ref physicalAddress, value); }
    	 }
        public string PostalAddress 
    	{ 
    		get { return postalAddress; }
    		set { SetProperty(ref postalAddress, value); }
    	 }
        public string ContactName 
    	{ 
    		get { return contactName; }
    		set { SetProperty(ref contactName, value); }
    	 }
        public string ContactTelephone 
    	{ 
    		get { return contactTelephone; }
    		set { SetProperty(ref contactTelephone, value); }
    	 }
        public long RoleId 
    	{ 
    		get { return roleId; }
    		set { SetProperty(ref roleId, value); }
    	 }
        public Nullable<long> PersonId 
    	{ 
    		get { return personId; }
    		set { SetProperty(ref personId, value); }
    	 }
        public Nullable<System.DateTime> CreatedOn 
    	{ 
    		get { return createdOn; }
    		set { SetProperty(ref createdOn, value); }
    	 }
        public Nullable<long> CreatedBy 
    	{ 
    		get { return createdBy; }
    		set { SetProperty(ref createdBy, value); }
    	 }
    
        
    	public virtual HRS_Role HRS_Role { get; set; }
    }
}

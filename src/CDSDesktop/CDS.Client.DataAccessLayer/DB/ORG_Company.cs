//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDS.Client.DataAccessLayer.DB
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    
    public partial class ORG_Company : INotifyPropertyChanged, IBaseEntity
    { 
    	bool hasChanges = false;
        public bool HasChanges
        {
        	get
        	{
                return hasChanges;
        	}
        	set
        	{
                if (hasChanges != value)
                    hasChanges = value;
        	}
        } 
    	
    	bool ignoreChanges = false;
        public bool IgnoreChanges
        {
            get
            {
                
                
                return ignoreChanges;
            }
            set
            {
                if (ignoreChanges != value)
                {
                    ignoreChanges = value;
                }
            }
        }
    
    	List<string> changeList = new List<string>();
    	[Browsable(false), EditorBrowsable(EditorBrowsableState.Never)]
        public List<string> ChangeList
        {
            get
            { 
                return changeList;
            }
            set
            {
                if (changeList != value)
                {
                    changeList = value;
                }
            }
        } 
    
    	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged; 
    	private void SetProperty<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberName] string name = "")
    	{
    		if (!EqualityComparer<T>.Default.Equals(field, value))
    		{
    			field = value;
    			//ChangeSet.Add(LogEntry.New<T>(field.ToString(),this.ToString(), this.Id,  field,  value ));
    			var handler = PropertyChanged;
    			if (handler != null)
    			{
    				if(!name.StartsWith("Id") && name != "Title" && name != "CreatedOn" && !IgnoreChanges)  
    				{
    					HasChanges = true;
    					ChangeList.Add(name);
    				}
    
    				handler(this, new System.ComponentModel.PropertyChangedEventArgs(name));
    			}
    		}
    	} 
     
        public ORG_Company()
        {
            this.ORG_CompanyAddress = new List<ORG_CompanyAddress>();
            this.ORG_Distribution = new List<ORG_Distribution>();
            this.ORG_History = new List<ORG_History>();
            this.ORG_TRX_Header = new List<ORG_TRX_Header>();
            this.ORG_TRX_LostSale = new List<ORG_TRX_LostSale>();
        }
    
        private long id;
        private long entityId;
        private byte typeId;
        private byte paymentTermId;
        private byte costCategoryId;
        private Nullable<long> accountId;
        private string prefix;
        private bool openItem;
        private bool active;
        private bool overrideAccount;
        private Nullable<decimal> accountLimit;
        private string discountCode;
        private string tagCode;
        private string areaCode;
        private string repCode;
        private string salesmanCode;
        private string statementPreference;
        private string countryCode;
        private string uRL;
        private string username;
        private string password;
        private string customValue1;
        private string customValue2;
        private string customValue3;
        private string customValue4;
        private string customValue5;
        private string customValue6;
        private Nullable<System.DateTime> createdOn;
        private Nullable<long> createdBy;
        private long siteId;
    
        public long Id 
    	{ 
    		get { return id; }
    		set { SetProperty(ref id, value); }
    	 }
        public long EntityId 
    	{ 
    		get { return entityId; }
    		set { SetProperty(ref entityId, value); }
    	 }
        public byte TypeId 
    	{ 
    		get { return typeId; }
    		set { SetProperty(ref typeId, value); }
    	 }
        public byte PaymentTermId 
    	{ 
    		get { return paymentTermId; }
    		set { SetProperty(ref paymentTermId, value); }
    	 }
        public byte CostCategoryId 
    	{ 
    		get { return costCategoryId; }
    		set { SetProperty(ref costCategoryId, value); }
    	 }
        public Nullable<long> AccountId 
    	{ 
    		get { return accountId; }
    		set { SetProperty(ref accountId, value); }
    	 }
        public string Prefix 
    	{ 
    		get { return prefix; }
    		set { SetProperty(ref prefix, value); }
    	 }
        public bool OpenItem 
    	{ 
    		get { return openItem; }
    		set { SetProperty(ref openItem, value); }
    	 }
        public bool Active 
    	{ 
    		get { return active; }
    		set { SetProperty(ref active, value); }
    	 }
        public bool OverrideAccount 
    	{ 
    		get { return overrideAccount; }
    		set { SetProperty(ref overrideAccount, value); }
    	 }
        public Nullable<decimal> AccountLimit 
    	{ 
    		get { return accountLimit; }
    		set { SetProperty(ref accountLimit, value); }
    	 }
        public string DiscountCode 
    	{ 
    		get { return discountCode; }
    		set { SetProperty(ref discountCode, value); }
    	 }
        public string TagCode 
    	{ 
    		get { return tagCode; }
    		set { SetProperty(ref tagCode, value); }
    	 }
        public string AreaCode 
    	{ 
    		get { return areaCode; }
    		set { SetProperty(ref areaCode, value); }
    	 }
        public string RepCode 
    	{ 
    		get { return repCode; }
    		set { SetProperty(ref repCode, value); }
    	 }
        public string SalesmanCode 
    	{ 
    		get { return salesmanCode; }
    		set { SetProperty(ref salesmanCode, value); }
    	 }
        public string StatementPreference 
    	{ 
    		get { return statementPreference; }
    		set { SetProperty(ref statementPreference, value); }
    	 }
        public string CountryCode 
    	{ 
    		get { return countryCode; }
    		set { SetProperty(ref countryCode, value); }
    	 }
        public string URL 
    	{ 
    		get { return uRL; }
    		set { SetProperty(ref uRL, value); }
    	 }
        public string Username 
    	{ 
    		get { return username; }
    		set { SetProperty(ref username, value); }
    	 }
        public string Password 
    	{ 
    		get { return password; }
    		set { SetProperty(ref password, value); }
    	 }
        public string CustomValue1 
    	{ 
    		get { return customValue1; }
    		set { SetProperty(ref customValue1, value); }
    	 }
        public string CustomValue2 
    	{ 
    		get { return customValue2; }
    		set { SetProperty(ref customValue2, value); }
    	 }
        public string CustomValue3 
    	{ 
    		get { return customValue3; }
    		set { SetProperty(ref customValue3, value); }
    	 }
        public string CustomValue4 
    	{ 
    		get { return customValue4; }
    		set { SetProperty(ref customValue4, value); }
    	 }
        public string CustomValue5 
    	{ 
    		get { return customValue5; }
    		set { SetProperty(ref customValue5, value); }
    	 }
        public string CustomValue6 
    	{ 
    		get { return customValue6; }
    		set { SetProperty(ref customValue6, value); }
    	 }
        public Nullable<System.DateTime> CreatedOn 
    	{ 
    		get { return createdOn; }
    		set { SetProperty(ref createdOn, value); }
    	 }
        public Nullable<long> CreatedBy 
    	{ 
    		get { return createdBy; }
    		set { SetProperty(ref createdBy, value); }
    	 }
        public long SiteId 
    	{ 
    		get { return siteId; }
    		set { SetProperty(ref siteId, value); }
    	 }
    
        
    	public virtual ORG_CostCategory ORG_CostCategory { get; set; }
        
    	public virtual ORG_Entity ORG_Entity { get; set; }
        
    	public virtual ORG_PaymentTerm ORG_PaymentTerm { get; set; }
        
    	public virtual ORG_Type ORG_Type { get; set; }
        [System.Xml.Serialization.XmlIgnore]
    	public virtual ICollection<ORG_CompanyAddress> ORG_CompanyAddress { get; set; }
        [System.Xml.Serialization.XmlIgnore]
    	public virtual ICollection<ORG_Distribution> ORG_Distribution { get; set; }
        [System.Xml.Serialization.XmlIgnore]
    	public virtual ICollection<ORG_History> ORG_History { get; set; }
        [System.Xml.Serialization.XmlIgnore]
    	public virtual ICollection<ORG_TRX_Header> ORG_TRX_Header { get; set; }
        [System.Xml.Serialization.XmlIgnore]
    	public virtual ICollection<ORG_TRX_LostSale> ORG_TRX_LostSale { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDS.Server.Installer.Entities
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    
    
    public partial class SYS_Person : INotifyPropertyChanged
    {  
    	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged; 
    	private void SetProperty<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberName] string name = "")
    	{
    		if (!EqualityComparer<T>.Default.Equals(field, value))
    		{
    			field = value;
    			//ChangeSet.Add(LogEntry.New<T>(field.ToString(),this.ToString(), this.Id,  field,  value ));
    			var handler = PropertyChanged;
    			if (handler != null)
    			{ 
    				handler(this, new System.ComponentModel.PropertyChangedEventArgs(name));
    			}
    		}
    	} 
     
        public SYS_Person()
        {  
        }
    
        private long id;
        private string title;
        private string name;
        private string surname;
        private string fullname;
        private bool archived;
        private Nullable<System.DateTime> createdOn;
        private Nullable<long> createdBy;
    
        public long Id 
    	{ 
    		get { return id; }
    		set { SetProperty(ref id, value); }
    	 }
        public string Title 
    	{ 
    		get { return title; }
    		set { SetProperty(ref title, value); }
    	 }
        public string Name 
    	{ 
    		get { return name; }
    		set { SetProperty(ref name, value); }
    	 }
        public string Surname 
    	{ 
    		get { return surname; }
    		set { SetProperty(ref surname, value); }
    	 }
        public string Fullname 
    	{ 
    		get { return fullname; }
    		set { SetProperty(ref fullname, value); }
    	 }
        public bool Archived 
    	{ 
    		get { return archived; }
    		set { SetProperty(ref archived, value); }
    	 }
        public Nullable<System.DateTime> CreatedOn 
    	{ 
    		get { return createdOn; }
    		set { SetProperty(ref createdOn, value); }
    	 }
        public Nullable<long> CreatedBy 
    	{ 
    		get { return createdBy; }
    		set { SetProperty(ref createdBy, value); }
    	 }

        List<SEC_User> user;
        public List<SEC_User> User { get { if (user == null) user = new List<SEC_User>(); return user; } set { user = value; } }

        public Int64 Role { get; set; }

        public static SYS_Person New
        {
            get
            {
                SYS_Person entry = new SYS_Person(); 

                return entry;
            }
        }

    }
}

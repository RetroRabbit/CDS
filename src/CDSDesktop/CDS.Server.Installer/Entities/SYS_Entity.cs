//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDS.Server.Installer.Entities
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;


    public partial class SYS_Entity : INotifyPropertyChanged
    {

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        private void SetProperty<T>(ref T field, T value, [System.Runtime.CompilerServices.CallerMemberName] string name = "")
        {
            if (!EqualityComparer<T>.Default.Equals(field, value))
            {
                field = value;
                //ChangeSet.Add(LogEntry.New<T>(field.ToString(),this.ToString(), this.Id,  field,  value ));
                var handler = PropertyChanged;
                if (handler != null)
                {

                    handler(this, new System.ComponentModel.PropertyChangedEventArgs(name));
                }
            }
        }

        public SYS_Entity()
        {
        }

        private long id;
        private byte typeId;
        private string codeMain;
        private string codeSub;
        private string shortName;
        private string name;
        private string description;
        private bool archived;
        private Nullable<long> createdBy;
        private Nullable<System.DateTime> createdOn;
        private string title;

        public long Id
        {
            get { return id; }
            set { SetProperty(ref id, value); }
        }
        public byte TypeId
        {
            get { return typeId; }
            set { SetProperty(ref typeId, value); }
        }
        public string CodeMain
        {
            get { return codeMain; }
            set { SetProperty(ref codeMain, value); }
        }
        public string CodeSub
        {
            get { return codeSub; }
            set { SetProperty(ref codeSub, value); }
        }
        public string ShortName
        {
            get { return shortName; }
            set { SetProperty(ref shortName, value); }
        }
        public string Name
        {
            get { return name; }
            set { SetProperty(ref name, value); }
        }
        public string Description
        {
            get { return description; }
            set { SetProperty(ref description, value); }
        }
        public bool Archived
        {
            get { return archived; }
            set { SetProperty(ref archived, value); }
        }
        public Nullable<long> CreatedBy
        {
            get { return createdBy; }
            set { SetProperty(ref createdBy, value); }
        }
        public Nullable<System.DateTime> CreatedOn
        {
            get { return createdOn; }
            set { SetProperty(ref createdOn, value); }
        }
        public string Title
        {
            get { return title; }
            set { SetProperty(ref title, value); }
        }

        List<SYS_Site> site;
        public List<SYS_Site> Site { get { if (site == null) site = new List<SYS_Site>(); return site; } set { site = value; } }

        public List<SYS_Address> addresses;
        public List<SYS_Address> Addresses { get { if (addresses == null) addresses = new List<SYS_Address>(); return addresses; } set { addresses = value; } }
          
        public virtual SYS_Person SYS_Person { get; set; }

        private static SYS_Entity New
        {
            get
            {
                SYS_Entity entry = new SYS_Entity()
                {
                    Title = "New Entity",
                    Archived = false,
                    ShortName = "New Site",
                    Name = "New Site",
                    Description = "New Site"
                };

                return entry;
            }
        }

        public static SYS_Entity NewSite
        {
            get
            {
                SYS_Entity entry = New;
                entry.Title = "New Site";
                entry.CodeSub = "00000";
                entry.TypeId = 10;
                entry.Addresses.Add(SYS_Address.NewBillingAddress);
                entry.Addresses.Add(SYS_Address.NewShippingAddress);
                return entry;
            }
        }

    }
}